
import 'package:flutter/material.dart';
import 'package:doubanMovie/api/DioManger.dart';
import 'package:doubanMovie/api/JKApi.dart';
import 'package:doubanMovie/api/JKMethod.dart';
import 'package:doubanMovie/Model.dart';
import 'package:doubanMovie/views/HomeItemView.dart';
class Home extends StatelessWidget {
  const Home({Key key}) : super(key: key);
  

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("首页"),
        ),
        body: Center(
          child: MoiveList(),
          ),
          
      
    );
  }
}

class MoiveList extends StatefulWidget {
  MoiveList({Key key}) : super(key: key);

  @override
  _MoiveListState createState() => _MoiveListState();
}

class _MoiveListState extends State<MoiveList> {
  List<Subjects> list = [];
  Autogenerated C;
  int count = 10;
  int start = 0;

  ScrollController _scrollController = ScrollController();
  @override
  void dispose() {
    //为了避免内存泄露，需要调用_controller.dispose

    _scrollController.dispose();
    print("Controller is  dispose");
    super.dispose();
  }


  @override
  void initState() {
    super.initState();
    _addScrollListener();
    getList();
  }

  void getList({count = 10 ,start = 0,isRefresh = false}) {
    
        DioManager().requestList(JKMethod.GET, 
    JKApi.top250,
    params: {"count":count,"start":start},
    success: (data){
        // print("success data = $data");
       C =  Autogenerated.fromJson(data);
       setState(() {
         if (isRefresh){
           list.clear();
           list.addAll(C.subjects);
         }else{
           list.addAll(C.subjects);
         }
         
       });
      
    },
    error: (error){
       print("error code = ${error.code}, massage = ${error.message}");
    }
    );
  }

  void _addScrollListener(){
    _scrollController.addListener(() {
        var maxScroll = _scrollController.position.maxScrollExtent;
        var pixel = _scrollController.position.pixels;
       
        if(pixel > maxScroll - 40 && list.length < C.total){
          start+=10;
          getList(start: start);
        }
        
    });
  }

  Future refresh () async{
    getList(count: 5,start: 0,isRefresh: true);
  }

  @override
  Widget build(BuildContext context) {
    return RefreshIndicator(
      onRefresh: refresh,
          child: ListView.builder(
        controller: _scrollController,
        itemCount: list?.length??0,
        itemBuilder:(BuildContext context,int index){
          return HomeItemView(model: list[index],rank: index+1,);
        },
        
      ),
    );
  }
}